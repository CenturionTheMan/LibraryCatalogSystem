/*
Deployment script for LibraryDataBase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LibraryDataBase"
:setvar DefaultFilePrefix "LibraryDataBase"
:setvar DefaultDataPath "C:\Users\dzied\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\dzied\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
-- Remove tables
DROP TABLE IF EXISTS dbo.BorrowRequests;
DROP TABLE IF EXISTS dbo.ResourceCopy;
DROP TABLE IF EXISTS dbo.LibraryResource;
DROP TABLE IF EXISTS dbo.Users;

-- Remove views
DROP VIEW IF EXISTS UserDetailsWithBorrowedResources;
DROP VIEW IF EXISTS DelayedBorrowersView;
DROP VIEW IF EXISTS ApprovedBorrowRequests;
DROP VIEW IF EXISTS SummarisedResources;
DROP VIEW IF EXISTS PendingBorrowRequests;
GO

GO
PRINT N'Creating View [dbo].[ApprovedBorrowRequests]...';


GO

CREATE VIEW ApprovedBorrowRequests AS
SELECT
    BR.RequestID,
    U.FirstName,
    U.LastName,
    R.Title AS BorrowedResource,
    BR.RequestDate,
    BR.DueDate,
    BR.Status
FROM BorrowRequests BR
JOIN LibraryUser U ON BR.UserID = U.UserID
JOIN LibraryResource R ON BR.ResourceID = R.ResourceID
WHERE BR.Status = 'Approved';
GO
PRINT N'Creating View [dbo].[DelayedBorrowersView]...';


GO

CREATE VIEW DelayedBorrowersView AS
SELECT
    U.UserID,
    U.FirstName,
    U.LastName,
    BR.RequestID,
    R.Title AS BorrowedResource,
    BR.DueDate,
    DATEDIFF(DAY, BR.DueDate, GETDATE()) AS DaysLate
FROM LibraryUser U
JOIN BorrowRequests BR ON U.UserID = BR.UserID
JOIN ResourceCopy RC ON BR.CopyID = RC.CopyID
JOIN LibraryResource R ON BR.ResourceID = R.ResourceID
WHERE BR.Status = 'Returned' AND BR.DueDate < GETDATE();
GO
PRINT N'Creating View [dbo].[PendingBorrowRequests]...';


GO

CREATE VIEW PendingBorrowRequests AS
SELECT
    BR.RequestID,
    U.FirstName,
    U.LastName,
    R.Title AS RequestedResource,
    BR.RequestDate,
    BR.DueDate
FROM BorrowRequests BR
JOIN LibraryUser U ON BR.UserID = U.UserID
JOIN LibraryResource R ON BR.ResourceID = R.ResourceID
WHERE BR.Status = 'Pending';
GO
PRINT N'Creating View [dbo].[SummarisedResources]...';


GO


----------------------------------------------------------------------------- VIEWS
CREATE VIEW SummarisedResources AS
SELECT
    R.ResourceID,
    R.Title,
    COUNT(RC.CopyID) AS TotalCopies,
    COUNT(CASE WHEN BR.Status = 'Approved' THEN 1 END) AS BorrowedCopies
FROM LibraryResource R
LEFT JOIN ResourceCopy RC ON R.ResourceID = RC.ResourceID
LEFT JOIN BorrowRequests BR ON RC.CopyID = BR.CopyID
GROUP BY R.ResourceID, R.Title;
GO
PRINT N'Creating View [dbo].[UserDetailsWithBorrowedResources]...';


GO

CREATE VIEW UserDetailsWithBorrowedResources AS
SELECT
    U.UserID,
    U.FirstName,
    U.LastName,
    U.Login,
    U.UserType,
    BR.RequestID,
    BR.RequestDate,
    BR.DueDate,
    R.Title AS BorrowedResource
FROM LibraryUser U
JOIN BorrowRequests BR ON U.UserID = BR.UserID
JOIN ResourceCopy RC ON BR.CopyID = RC.CopyID
JOIN LibraryResource R ON BR.ResourceID = R.ResourceID
WHERE BR.Status = 'Approved';
GO
PRINT N'Update complete.';


GO
